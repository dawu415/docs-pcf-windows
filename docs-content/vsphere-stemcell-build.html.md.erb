---
title: Creating a vSphere Stemcell Manually
owner: Greenhouse
---

<strong><%= modified_date %></strong>

 In vSphere, customers must build their own stemcells in order to use their on-premise deployments. In order to create the vSphere stemcell manually, you must first begin with an ISO or other VM image. This document describes how to use VMware Workstation, VMware Fusion, and vCenter to:

+ Install the BOSH dependencies.
+ Create a .tgz file (the stemcell) that can be uploaded to your BOSH director and used with Cloud Foundry.

<p class="note"><strong>Note</strong>
This process is based on the fact that the operator is maintaining an updated template with all Windows recommended security updates. Every release of this repository includes an <code>updates.txt</code> file that lists the currently recommended KB Microsoft hotfixes to have installed. You can determine if your image needs updates by creating a VM with the image and going to <b>Control Panel</b>. If any critical or important updates are available we recommend installing updates first, then rebuilding the stemcell.
</p>

## <a id="req"></a>Requirements 

<table>
<tr>
  <th>Component</th>
  <th>Notes</th>
</tr>
<tr>
  <td><a href="https://www.vmware.com/support/developer/ovf">ovftool</a></td>
  <td>You should make sure the <code>ovftool</code> command is available from your command line.
  It is installed by default in <code>C:\Program Files\VMware\VMware OVF Tool</code>.</td>
</tr>
<tr>
  <td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2012-r2">Windows ISO</a></td>
  <td>You can also use a custom base image.</td>
</tr>
<tr>
<td><a href="https://golang.org/dl/">Golang</a></td>
<td>You should use the latest 1.8.x compiler.</td>
</tr>
<tr>
<td><a href="https://www.ruby-lang.org/en/downloads/">Ruby</a></td>
<td>You should use the latest latest 2.3.x version.</td>
</tr>
<tr>
<td>VMware Workstation, or VMware Fusion, or access to a vSphere account</td>
<td></td>
</tr>
<tr>
  <td><a href="https://git-scm.com/downloads">git</a></td>
  <td></td>
</tr>
<tr>
<td><a href="https://greenhouse.ci.cf-app.com/teams/main/pipelines/tar/resources/s3-bucket">tar.exe</a></td>
<td>You should download this if you are on Windows.</td>
</tr>
<tr>
<td>VMware Tools</td>
<td>This is installed via VMware Fusion, VMware Workstation, or vCenter.</td>
</tr>
</table>

<p class="note"><strong>Note:</strong>
These are instructions for installing Windows from a Windows installation disk ISO (either a volume licensed copy or a retail copy from MSDN). We recommend maintaining a separate, updated Windows VM based on this ISO to serve as the basis for the installation steps below. This way, you may apply Windows Updates and create new stemcells without having to reinstall all updates from scratch. Make sure that your image has <b>Hardware Compatibility</b> set to <b>version 9</b>, and that it has VMware tools installed.
</p>

## <a id="Step-1"></a> Step 1: Create base VM for stemcell
###<a id="Fusion"></a>For VMware Fusion
1. Select **File** and then **New**.
1. Select **Installation Method: Create a custom virtual machine**.
1. Choose **Operating System**: **Microsoft Windows**, and then **Windows Server 2012**. Despite selecting this Operating System, you will be selecting **Windows Server 2012R2** in a subsequent step.
1. Choose **Virtual Disk**: Create a new virtual disk**. You can use the default settings. 
1. Select **Customize Settings**. Save the VM before continuing. You can use a name of your choosing. 
1. A **Settings** window will appear for your new VM. In the settings window, enter the following configurations:
	1. In the **Removable Devices** row, select **Camera**, and then Remove device.
	1. In the **Removable Devices** row, select **CD/DVD** and then check the 'Connect CD/DVD Drive' box.
	1. In the **This drive is configured to use the following:** section, select **Choose a disc or disc image** and then input your base ISO.
	1. In the **Advanced Options** section select **Bus type** and then **SCSI**, which is required for Hardware Version 9.
	1. In the **Other** row, select **Compatibility** then **Advanced Options**, **Use Hardware Version number 9**, and then click **Apply**.
	1. In **Processor & Memory**, located within the **System Settings** row, keep the default settings for cores, processors, and memory.
1. Start VM. 
	1. If you are starting from a new MSDN ISO, go through Windows installation process with your ISO Pivotal recommends select **Windows Server 2012R2 Standard with a GUI**, if going through installation.
1. Install VMware Tools.
	1. Select **Virtual Machine**, select  **Install VMWare Tools**, **Complete Installation**, and follow the installation instructions. 
	1. Restart the VM to finish the install.
1. Shut down the VM.
1. In the **Settings** window of the new VM, select **CD/DVD**, within the the **Removable Devices** row.
	1. Select **Autodetect**. This effectively removes the ISO.
	1. De-select **Connect CD/DVD Drive**.
	1. Select **Advanced Options**, and switch **Bus type** to **IDE**.
1. Turn on and then turn off the VM. This is required to apply changes to CD/DVD.
1. In the **Other** row, select **Compatibility** and then **Advanced Options**. Ensure that the **Hardware Version** is set to **9**.

###<a id="Workstation"></a> For VMware Workstation
1. Install VMware workstation.
1. Create a new Virtual Machine:
	1. Select **Custom Advanced** and then click **Next**.
	1. Select **Workstation 9.x Compatibility** and then click **Next**.
	1. Select **I will install operating system later** and then click **Next**.
	1. Select **Microsoft Windows** and then the **Windows 2012R2** version and then click **Next**.
	1. Choose a name for your virtual machine and then click **Next**.
	1. Select **BIOS** and click **Next**.
	1. Keep default settings for number of cores and processors and then click **Next**.
	1. Keep default settings for memory and then click **Next**.
	1. Select the correct **Network Type (NAT)** and then click **Next**.
	1. Create a new virtual disk and then click **Next**.
	1. Select **Customize Hardware**.
		1. Select **New CD/DVD**.
		1. Select **Use ISO Image file** and browse for the correct ISO.
1. Power on the new VM and install Windows.
	1. Select **Server with GUI**.
	1. Select **Custom Installation**.
	1. Continue the installation and select a password for the Admin user.
1. After the VM has started successfully, right-click the machine name in Workstation and Install VMware Tools.
1. Shut down the VM.
1. Remove the ISO file from the CD/DVD drive
	1. Select the settings for the VM.
	1. Select **CD/DVD Remove**.
	1. Add **CD/DVD Drive**.
	1. Select **Use Physical drive** and **Auto Detect**.
	1. De-select **Connect at power on**.
	1. Select **Ok**.
1. Start the new VM.

###<a id="vCenter"></a>For vCenter
1. If you are using an ISO, upload it to your datastore.
	1. Select **vCenter** and then **Datastores**.
	1. Select your desired datastore and directory.
	1. Select **Upload a file to datastore** and upload the ISO. This would be the hard disk icon with a green plus sign.
1. If you are using a web browser to upload the ISO to your datastore, you will be prompted to install a web plugin.  
1. Create a new virtual machine.
	1. If you are using an existing template, select the **creation type**: **Deploy from template**, select the existing template, and then click **Next**.

1. In **Select compatibility**, ensure that you choose **ESXi 5.5 and later** and click **Next**.
1. Select **Windows** as **Guest OS Family** and **Microsoft Windows Server 2012R2** as **Guest OS version** and click **Next**. 
1. In **Customize Hardware**:
	1. Under **New CD\DVD Drive**:
	  * Select **Datastore ISO File**. 
	  * Expand the menu and select **Connect At Power On**.
	  * Click **Browse** and select the ISO you uploaded to your datastore.
	  * Select **IDE** as the Virtual Device Node.
	1. Remove floppy drive, if present.
	1. Remove **SATA Controller**, if present.  
1. After creating the VM, click **Power On** in the **Actions** tab for your VM, then install Windows:
	1. Select **Server with GUI**.
	1. Select **Custom Installation**.
	1. Complete the installation process and add **select a password** for Administrator user.
1. In the vCenter web client, **Install VMware Tools** in the **VM Summary** tab.
1. With the VM powered off, select **Edit Settings**.
  * Remove CD/DVD drive.
  * Select **New device** > **CD/DVD Drive** and click **Add**.
  * Under **New CD/DVD Drive**, select **Client Device**. 
  * Expand the menu and select **IDE** as the Virtual Device Node. **'Connect at Power On' should NOT be selected.**
1. Remove New **SATA Controller**, if present. 

##<a id="Step 2"></a> Step 2: Download BOSH PSModules

<p class="note"><strong>Note:</strong>
Do not use the GitHub generated "Source Code" <code>.zip</code> and "Source Code" <code>.tar.gz</code> files from the releases page - they are not Git repositories and are missing submodules. On Windows you MUST clone straight into <code>C:\\</code>, or the git clone and submodule update will fail due to file path lengths.
</p>

1. Download the **bosh-psmodules.zip** for your desired release <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases">here</a>. 
1. Proceed to _Step 3: Install BOSH PSModules_.


<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }
    .note.warning:before {
        color: #f99;
    }
</style>

<p class="note warning"><strong>IMPORTANT:</strong>
Pivotal does not recommend building the BOSH PSModules from the source. However, if you must do so, follow the steps below.
</p>

<b>To build the BOSH PSModules from the source:</b>
</br>
</br>

1. Clone this <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder">repo</a> on your host, not in the VM for your stemcell.
1. Expand the submodules by running the commands below:
	<pre class="terminal">
	$ git clone <span>https:</span>//github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder
	$ cd bosh-windows-stemcell-builder
	$ git checkout DESIRED\_STEMCELL\_VERSION_TAG
	$ git submodule update --init --recursive
	$ gem install bundler
	$ bundle install
	$ rake package:psmodules
	</pre>

## <a id="Step 3"></a> Step 3: Install BOSH PSModules

1. Transfer the `bosh-psmodules.zip` file you either downloaded from the releases page or the `build/bosh-psmodules.zip` file you built from the source, to your Windows VM. You can drag and drop files if you have installed VMware tools in your VM and are running Workstation or Fusion.
1. Unzip the `.zip` file and copy the BOSH.* folders to `C:\Program Files\WindowsPowerShell\Modules`.


##<a id="Step 4"></a> Step 4: Install CloudFoundry Cell requirements

1. On your windows VM, start `powershell` and run `Install-CFFeatures`.
1. Apply the recommended ingress and service configuration:
	1. Run the following powershell command `Protect-CFCell`.

To make sure you have the proper .NET Framework version(s) installed, follow this <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/wiki/Manual-Stemcell-DotNet-Version-Guide">guide</a>.

##<a id="Step 5"></a> Step 5: Download and Install the BOSH Agent

1. Download `agent.zip` file. The `agent.zip` file is provided as a package in the release available on <a href="https://github.com/cloudfoundry-incubator/bosh-windows-stemcell-builder/releases">Github</a>. We recommend downloading the .zip file from that package.
1. Transfer the `build/agent.zip` file you downloaded from the releases page to your Windows VM. 
1. Proceed to _Step 6: Optimize and Compress Disk_. 

<p class="note warning">
<strong>IMPORTANT:</strong>
Pivotal does not recommend building the <code>agent.zip</code> from the source. However, if you must do so, run the rake commands below.
</p> 

<b>To build the</b> `agent.zip` <b>from the source:</b>

1. Run <code>rake package:agent</code> on your host. Do not run the <code>rake package:agent</code> command in the VM for your stemcell.
1. Transfer the `build/agent.zip` file you built from the source to your Windows VM.
1. On your Windows VM, start `powershell` and run `Install-Agent -IaaS vsphere -agentZipPath PATH_TO_agent.zip`.
1. Proceed to _Step 6: Optimize and Compress Disk_. 

##<a id="Step 6"></a> Step 6: Optimize and Compress Disk
In order to reduce the stemcell size, you can run the following powershell modules:

* `Optimize-Disk`: This command is a wrapper that runs `dism` and clears unnecessary files.
* `Compress-Disk`: This command can be used to defrag and zero out the disk.

##<a id="Step 7"></a> Step 7: Sysprep and apply security policies

<p class="note"><strong>Note:</strong>
Applying the security policies supports the security of the stemcell and firewall rules that ensure secure operations on Cloud Foundry; therefore, Pivotal strongly recommends applying these policies. You can do so by completing the three steps below:
</p>

1. [Download](https://msdnshared.blob.core.windows.net/media/2016/09/LGPOv2-PRE-RELEASE.zip) `lgpo.exe` to the Windows VM you are provisioning.
1. Save `lgpo.exe` to `C:\Windows\lgpo.exe`.
1. Run the following powershell command: 
`Invoke-Sysprep -IaaS vsphere -NewPassword NEW_PASSWORD -ProductKey PRODUCT_KEY -Owner OWNER -Organization ORGANIZATION`

Completing the above will power off the VM. Do not turn the VM back on before exporting.

<b>If you decide to</b> `sysprep` <b>the image without applying the recommended security policies:</b> 

1. Run the following powershell command:

`Invoke-Sysprep -IaaS vsphere -NewPassword NEW_PASSWORD -ProductKey PRODUCT_KEY -Owner OWNER -Organization ORGANIZATION -SkipLGPO`

This will power off the VM. Do not turn the VM back on before exporting.

##<a id="Step 8"></a> Step 8: Export image to OVA format

If you are using VMware Fusion or Workstation: 

1. Power off the VM. 
1. Locate the directory that has your VM's `.vmx` file. This defaults to the `Documents\Virtual Machines\VM-name\VM-name.vmx` path in your user's `home` directory. You can also right-click on the VM to find its location.
1. Convert the `.vmx` file into an OVA archive using **ovftool** with the following command:
	`ovftool <PATH_TO_VMX_FILE> image.ova`

##<a id="Step 9"></a> Step 9: Convert OVA file to a BOSH Stemcell
1. Run `gem install bundler`. 
1. Run `bundle install`.
1. Convert the OVA file by running the following command: `rake package:vsphere_ova[PATH_TO_OVA,PATH_TO_STEMCELL_DESTINATION_DIRECTORY,STEMCELL_VERSION]`

For example:
<pre class="terminal">$ rake package:vsphere_ova[./build/image.ova,./build/stemcell,1035.0]</pre>

Currently, the OVA filename and destination path cannot contain spaces. 

##<a id="Step 10"></a> Step 10: Testing Stemcell with bosh-windows-acceptance-tests (BWATS)

Using **bosh-windows-acceptance-tests** helps you confirm that your stemcell is working as expected. 

<b>Requirements</b>
</br>


<table>
<tr>
  <th>Component</th>
  <th>Notes</th>
</tr>
<tr>
  <td><a href="https://bosh.io/docs/cli-v2.html">bosh cli</a></td>
  <td>Latest stable version</td>
</tr>
<tr>
<td><a href="https://golang.org/dl/">Golang</a></td>
<td>Latest 1.8.x compiler</td>
</tr>
</table>

**<a href="https://github.com/cloudfoundry/bosh-cli">bosh cli</a> environment variables**

<table>
<tr>
  <th>Variable</th>
  <th>Notes</th>
</tr>
<tr>
  <td>BOSH_TARGET</td>
  <td>This is the IP of your BOSH director.</td>
</tr>
<tr>
<td>BOSH_CLIENT</td>
<td>This is the BOSH client name.</td>
</tr>
<tr>
<td>BOSH_CLIENT_SECRET</td>
<td>This is your BOSH client secret.</td>
</tr>
<tr>
<td>BOSH_CA_CERT</td>
<td>This is the contents of your bosh director cert, including \n for newlines.</td>
</tr>
<tr>
<td>BOSH_UUID</td>
<td>This is the unique identifier for your BOSH deployment.</td>
</tr>
<tr>
<td>STEMCELL_PATH</td>
<td>This is the path to the stemcell tarball.</td>
</tr>
<tr>
<td>AZ</td>
<td>This is the area zone from the BOSH <a href="https://bosh.io/docs/cloud-config.html">cloud config.</a></td>
</tr>
<tr>
<td>VM_TYPE</td>
<td>This is the virtual machine type from the BOSH cloud config.</td>
</tr>
<tr>
<td>VM_EXTENSIONS</td>
<td>This is a comma separated string of options, for example, 50GB_ephemeral_disk</td>
</tr>
<tr>
<td>NETWORK</td>
<td>This is the network from the BOSH cloud config. </td>
</tr>
</table>
</br>

1. Set the above environment variables by using your chosen input method. You can, for example, set the variable by running `export ENVIRONMENT_VARIABLE=VARIABLE_PATH_OR_VALUE` in your BASH profile if you are running Linux. If you are running Windows, you can set environment variables within the **Advanced** section of **My Computer**.
1. Run bosh-windows-acceptance-tests (BWATS) with the following `rake` commands:

<pre class="terminal">$ rake package: bwats
$ rake run:bwats ["vsphere"]</pre>